from pymavlink import mavutil

try:
    from siyi_sdk import SIYISDK
except ImportError:
    print("Errore: impossibile importare siyi_sdk.")
    exit(1)

class GimbalController:
    def __init__(self, connection="/dev/ttyAMA0", baud=57600, cam_ip="192.168.144.25", cam_port=37260):
        self.master = mavutil.mavlink_connection(connection, baud=baud)
        self.master.wait_heartbeat()
        print("âœ… Heartbeat ricevuto.")

        self.master.mav.request_data_stream_send(
            self.master.target_system,
            self.master.target_component,
            mavutil.mavlink.MAV_DATA_STREAM_RC_CHANNELS,
            10,  # 10 Hz per massima reattivitÃ 
            1
        )

        self.cam = SIYISDK(server_ip=cam_ip, port=cam_port)
        if not self.cam.connect():
            print("Errore: connessione camera fallita.")
            exit(1)

        self.prev_yaw = None
        self.prev_pitch = None

    def map_rc(self, value, rc_min, rc_max, out_min, out_max):
        """Map RC value to angle"""
        value = max(rc_min, min(rc_max, value))
        return ((value - rc_min) / (rc_max - rc_min)) * (out_max - out_min) + out_min

    def run(self):
        print("ðŸŽ® Controllo YAW (CH12) + PITCH (CH10) attivo...")
        while True:
            msg = self.master.recv_match(type='RC_CHANNELS', blocking=True, timeout=0.2)
            if not msg:
                continue

            rc_yaw = msg.chan12_raw
            rc_pitch = msg.chan10_raw

            if not (900 < rc_yaw < 2100 and 900 < rc_pitch < 2100):
                continue

            yaw = self.map_rc(rc_yaw, 1000, 2000, -120, 120)
            pitch = self.map_rc(rc_pitch, 1000, 2000, -90, 25)

            # Riduci soglia a 0.3 per piÃ¹ step â†’ piÃ¹ fluido
            if (self.prev_yaw is None or abs(yaw - self.prev_yaw) >= 0.3 or
                self.prev_pitch is None or abs(pitch - self.prev_pitch) >= 0.3):

                self.cam.setGimbalRotation(yaw, pitch)
                print(f"YAW: {yaw:.1f}Â° | PITCH: {pitch:.1f}Â°")
                self.prev_yaw = yaw
                self.prev_pitch = pitch

